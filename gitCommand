Code share: Git, CVS, SVN, ClearCase, VSS(Visual Studio)

Git:
pwd: show the location


-> git commit -m "add readme"

you can add three txt and just one commit

-> we add this sentence and use $ git status to check what happen

add hello, we want to know if git diff work



->git diff shows the difference

Attention, you change your file but if not add or commit on git, then they are not change in there.

You can review all the version you have commit, let's have a try with git log.



->git log: 

show all the version from most currently to most far away. Press q for done.

The current is HEAD, and the one before last one is HEAD^, HEAD^^. with git reset HEAD^.




->git reset --hard HEAD^             

the file will change to the previous one

->git rest --hard 597914ec

How ever, if you want to change back the most recently one, you can do like this:




->git reflog

597914ec is a ID of version. You can get all ID of your have changed


->cat filename                  
show the content of the file



test:
Hi, I am planning to learn more. It is a tough time, but I can survive.

Hi, the stupid boring man always yarn at the dog.


Two step to cancel a change that you add to git:

->git reset HEAD filename

reset the HEAD filename. 

->git checkout -- filename

Clear the work space of this file. However, this is not work on my terminal.



delete:

-> rm filename         

Just remove in workspace, but not in buffer, and you can use : git status to check

->git status

it will show you that file is deleted. There are two choice: deleted and recover

-> git rm filename    ->git commit -m "delete"

-> git checkout -- filename

The second command line is recover.




local load to remote Github

-> cd ~/.ssh
check if you have .ssh, if don't have, you need to generate one

->ssh-keygen -t rsa -C XXXx@gmail.com
generate ssh 

-> git remote add Name git@github.com:Yollyliu/learngit.git
-> git push -u Name master
then you can get the file on your Github

->$ git push Name master
Everytime you are put your file to Github

->$ git push




From remote Github to local:

first build a new repostory, 

->$ git clone git@github.com:michaelliao/Name.git

However, I tried a existed local file and existed repostory in Github, it seems not work.





Build new divide:

$git checkout -b dev

build a new branch dev

$git branch

it will list all branches, and the current branch marked as "*".

-vim readme.txt   // entry readme 
-i   //insert readme.txt
esc + :wq   //store and quit

switch back to master branch:

$git checkout master

when switch back to master, and open readme.txt, find it was not changed.

$ git merge dev

merge dev with master, what change in dev will be reflect on master.(fast forward)

Attention: before you merge, you should add and commit what readme.txt have modified.


If there is a merge conflict, you should 1. $git status to see the modified file,
2. open the txt, and change " <<<HEAD ======= >>>>>>>New branck name " to the content you want, then add and commit



1. If you meet problem when "git push Name master", then it must be changed "readme.txt" or "license". Three steps :
1. git remote add origin
2. git pull origin master
3. git push origin master

Then delete dev:

&git branch -d dev

$git merge --no-ff -m "merge with no-ff" dev
Another way for merge is :  --no-ff , which is forbidden fast forward.  If you use fast forward,
when you delete branch, information on that branch will also discard.



There is a problem, the passage above cannot be shown on Github, even though I check it several time in my local gitCommand. Cannot find reason, so I add this passage, planning to commit and then push to Github to check if it works.





If you open a dev and have not finish,,and same time, you need debug. Then:

$git stash            // store the current place

Saved working directory and index state WIP on dev: f52c633 add merge.


After this, you can build new branch to fix bug. If you want to fix master bug, then build a new
branch in master.

$git checkout master

$git checkout -b issue-101

//build a new branch in master, and debug,


However, if you build a new branch, then you want to delete is and donot merge, you should do like this:

$git branch -D <name> 
delete all the branch which never merge


$ git clone git@github.com:michaelliao/learngit.git
clone a branch to local, but only the "master" branch to local. If he want to "dev" branch, then should do:


$ git checkout -b dev origin/dev
// pull remote dev to local dev


$ git push Name dev
//push local dev to remote dev


However, at the same time, you are pushing, there is a conflict. Doing follow:
1. pull the submitted dev download; 2. change

$ git branch --set-upstream-to=origin/dev dev
$ git pull


首先，可以试图用git push origin <branch-name>推送自己的修改；

如果推送失败，则因为远程分支比你的本地更新，需要先用git pull试图合并；

如果合并有冲突，则解决冲突，并在本地提交；

没有冲突或者解决掉冲突后，再用git push origin <branch-name>推送就能成功！

如果git pull提示no tracking information，则说明本地分支和远程分支的链接关系没有创建，用命令git branch --set-upstream-to <branch-name> origin/<branch-name>。


Conclusion:

查看远程库信息，使用git remote -v；

本地新建的分支如果不推送到远程，对其他人就是不可见的；

从本地推送分支，使用git push origin branch-name，如果推送失败，先用git pull抓取远程的新提交；

在本地创建和远程分支对应的分支，使用git checkout -b branch-name origin/branch-name，本地和远程分支的名称最好一致；

建立本地分支和远程分支的关联，使用git branch --set-upstream branch-name origin/branch-name；

从远程抓取分支，使用git pull，如果有冲突，要先处理冲突。


$git rebase





$git tag v1.2
 
tag current branch as v1.2. 


$git tag

shows all tags

The best time to tag is the time when commiting. However, if you want to tag Monday's file but today is Friday. Then:

$git log --pretty=oneline --abbrev-commit

get the following:

c40e630 (HEAD -> master, tag: v1.0, two/master) final issue 101
866e37e (dev) issue
d223ee0 bug issue-01
cc9f277 solve the above passage disappear problem
981bf3f merge with no-ff
26b75bc (two/dev) no-ff
17ddc99 Nov2. learning
e5d06b1 Merge branch 'master' of github.com:Yollyliu/learngit
d16b24d test new branch problem
783964a new branck test
ec103d4 branch test
10d3207 Update readme.rtf
f9469dd try for both exist
85bdb23 delete java200
812ce1a push local to remote
61f7c87 remove test
f7279a9 add test
cb24b0c remove test
7786120 add test
6f6d635 one
a7ca754 plan
1aaf59f change version and reload previous version
14abe0e explain diff


$ git tag v0.9 85bdb23

tag v0.9 as the time when delete java200.

$git show v0.9

show detail information of v0.9

$ git tag -a v0.1 -m "version 0.1 released" 783964a

-a: specify name, -m: specify information


$git tag -d v0.1

delete tag use -d, as tag same as add, so if you tag wrong, it not automatic push to remote.

$git push origin tagName

push local tagName to remote.

$git push origin --tags

push all local tagName to remote.

If you push a wrong tag to remote, wanting to delete it. Follow:

$git tag -d tagName

delete the tag in local.

$ git push origin :refs/tags/tagName














